
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Operadores` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Operadores
 * 
 */
export type OperadoresModel = runtime.Types.Result.DefaultSelection<Prisma.$OperadoresPayload>

export type AggregateOperadores = {
  _count: OperadoresCountAggregateOutputType | null
  _min: OperadoresMinAggregateOutputType | null
  _max: OperadoresMaxAggregateOutputType | null
}

export type OperadoresMinAggregateOutputType = {
  id: string | null
  name: string | null
  email: string | null
  emailVerified: boolean | null
  image: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type OperadoresMaxAggregateOutputType = {
  id: string | null
  name: string | null
  email: string | null
  emailVerified: boolean | null
  image: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type OperadoresCountAggregateOutputType = {
  id: number
  name: number
  email: number
  emailVerified: number
  image: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type OperadoresMinAggregateInputType = {
  id?: true
  name?: true
  email?: true
  emailVerified?: true
  image?: true
  createdAt?: true
  updatedAt?: true
}

export type OperadoresMaxAggregateInputType = {
  id?: true
  name?: true
  email?: true
  emailVerified?: true
  image?: true
  createdAt?: true
  updatedAt?: true
}

export type OperadoresCountAggregateInputType = {
  id?: true
  name?: true
  email?: true
  emailVerified?: true
  image?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type OperadoresAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Operadores to aggregate.
   */
  where?: Prisma.OperadoresWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operadores to fetch.
   */
  orderBy?: Prisma.OperadoresOrderByWithRelationInput | Prisma.OperadoresOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.OperadoresWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operadores from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operadores.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Operadores
  **/
  _count?: true | OperadoresCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: OperadoresMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: OperadoresMaxAggregateInputType
}

export type GetOperadoresAggregateType<T extends OperadoresAggregateArgs> = {
      [P in keyof T & keyof AggregateOperadores]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOperadores[P]>
    : Prisma.GetScalarType<T[P], AggregateOperadores[P]>
}




export type OperadoresGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OperadoresWhereInput
  orderBy?: Prisma.OperadoresOrderByWithAggregationInput | Prisma.OperadoresOrderByWithAggregationInput[]
  by: Prisma.OperadoresScalarFieldEnum[] | Prisma.OperadoresScalarFieldEnum
  having?: Prisma.OperadoresScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OperadoresCountAggregateInputType | true
  _min?: OperadoresMinAggregateInputType
  _max?: OperadoresMaxAggregateInputType
}

export type OperadoresGroupByOutputType = {
  id: string
  name: string
  email: string
  emailVerified: boolean
  image: string | null
  createdAt: Date
  updatedAt: Date
  _count: OperadoresCountAggregateOutputType | null
  _min: OperadoresMinAggregateOutputType | null
  _max: OperadoresMaxAggregateOutputType | null
}

type GetOperadoresGroupByPayload<T extends OperadoresGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OperadoresGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof OperadoresGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OperadoresGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OperadoresGroupByOutputType[P]>
      }
    >
  >



export type OperadoresWhereInput = {
  AND?: Prisma.OperadoresWhereInput | Prisma.OperadoresWhereInput[]
  OR?: Prisma.OperadoresWhereInput[]
  NOT?: Prisma.OperadoresWhereInput | Prisma.OperadoresWhereInput[]
  id?: Prisma.StringFilter<"Operadores"> | string
  name?: Prisma.StringFilter<"Operadores"> | string
  email?: Prisma.StringFilter<"Operadores"> | string
  emailVerified?: Prisma.BoolFilter<"Operadores"> | boolean
  image?: Prisma.StringNullableFilter<"Operadores"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Operadores"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Operadores"> | Date | string
  sessions?: Prisma.SessionListRelationFilter
  accounts?: Prisma.AccountListRelationFilter
  EmprestimosGerados?: Prisma.EmprestimoListRelationFilter
}

export type OperadoresOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  emailVerified?: Prisma.SortOrder
  image?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  sessions?: Prisma.SessionOrderByRelationAggregateInput
  accounts?: Prisma.AccountOrderByRelationAggregateInput
  EmprestimosGerados?: Prisma.EmprestimoOrderByRelationAggregateInput
}

export type OperadoresWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  email?: string
  AND?: Prisma.OperadoresWhereInput | Prisma.OperadoresWhereInput[]
  OR?: Prisma.OperadoresWhereInput[]
  NOT?: Prisma.OperadoresWhereInput | Prisma.OperadoresWhereInput[]
  name?: Prisma.StringFilter<"Operadores"> | string
  emailVerified?: Prisma.BoolFilter<"Operadores"> | boolean
  image?: Prisma.StringNullableFilter<"Operadores"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Operadores"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Operadores"> | Date | string
  sessions?: Prisma.SessionListRelationFilter
  accounts?: Prisma.AccountListRelationFilter
  EmprestimosGerados?: Prisma.EmprestimoListRelationFilter
}, "id" | "email">

export type OperadoresOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  emailVerified?: Prisma.SortOrder
  image?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.OperadoresCountOrderByAggregateInput
  _max?: Prisma.OperadoresMaxOrderByAggregateInput
  _min?: Prisma.OperadoresMinOrderByAggregateInput
}

export type OperadoresScalarWhereWithAggregatesInput = {
  AND?: Prisma.OperadoresScalarWhereWithAggregatesInput | Prisma.OperadoresScalarWhereWithAggregatesInput[]
  OR?: Prisma.OperadoresScalarWhereWithAggregatesInput[]
  NOT?: Prisma.OperadoresScalarWhereWithAggregatesInput | Prisma.OperadoresScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Operadores"> | string
  name?: Prisma.StringWithAggregatesFilter<"Operadores"> | string
  email?: Prisma.StringWithAggregatesFilter<"Operadores"> | string
  emailVerified?: Prisma.BoolWithAggregatesFilter<"Operadores"> | boolean
  image?: Prisma.StringNullableWithAggregatesFilter<"Operadores"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Operadores"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Operadores"> | Date | string
}

export type OperadoresCreateInput = {
  id: string
  name: string
  email: string
  emailVerified?: boolean
  image?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput
  EmprestimosGerados?: Prisma.EmprestimoCreateNestedManyWithoutOperadorInput
}

export type OperadoresUncheckedCreateInput = {
  id: string
  name: string
  email: string
  emailVerified?: boolean
  image?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput
  EmprestimosGerados?: Prisma.EmprestimoUncheckedCreateNestedManyWithoutOperadorInput
}

export type OperadoresUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput
  EmprestimosGerados?: Prisma.EmprestimoUpdateManyWithoutOperadorNestedInput
}

export type OperadoresUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput
  EmprestimosGerados?: Prisma.EmprestimoUncheckedUpdateManyWithoutOperadorNestedInput
}

export type OperadoresCreateManyInput = {
  id: string
  name: string
  email: string
  emailVerified?: boolean
  image?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OperadoresUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OperadoresUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OperadoresCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  emailVerified?: Prisma.SortOrder
  image?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OperadoresMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  emailVerified?: Prisma.SortOrder
  image?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OperadoresMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  email?: Prisma.SortOrder
  emailVerified?: Prisma.SortOrder
  image?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OperadoresScalarRelationFilter = {
  is?: Prisma.OperadoresWhereInput
  isNot?: Prisma.OperadoresWhereInput
}

export type OperadoresNullableScalarRelationFilter = {
  is?: Prisma.OperadoresWhereInput | null
  isNot?: Prisma.OperadoresWhereInput | null
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type OperadoresCreateNestedOneWithoutSessionsInput = {
  create?: Prisma.XOR<Prisma.OperadoresCreateWithoutSessionsInput, Prisma.OperadoresUncheckedCreateWithoutSessionsInput>
  connectOrCreate?: Prisma.OperadoresCreateOrConnectWithoutSessionsInput
  connect?: Prisma.OperadoresWhereUniqueInput
}

export type OperadoresUpdateOneRequiredWithoutSessionsNestedInput = {
  create?: Prisma.XOR<Prisma.OperadoresCreateWithoutSessionsInput, Prisma.OperadoresUncheckedCreateWithoutSessionsInput>
  connectOrCreate?: Prisma.OperadoresCreateOrConnectWithoutSessionsInput
  upsert?: Prisma.OperadoresUpsertWithoutSessionsInput
  connect?: Prisma.OperadoresWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OperadoresUpdateToOneWithWhereWithoutSessionsInput, Prisma.OperadoresUpdateWithoutSessionsInput>, Prisma.OperadoresUncheckedUpdateWithoutSessionsInput>
}

export type OperadoresCreateNestedOneWithoutAccountsInput = {
  create?: Prisma.XOR<Prisma.OperadoresCreateWithoutAccountsInput, Prisma.OperadoresUncheckedCreateWithoutAccountsInput>
  connectOrCreate?: Prisma.OperadoresCreateOrConnectWithoutAccountsInput
  connect?: Prisma.OperadoresWhereUniqueInput
}

export type OperadoresUpdateOneRequiredWithoutAccountsNestedInput = {
  create?: Prisma.XOR<Prisma.OperadoresCreateWithoutAccountsInput, Prisma.OperadoresUncheckedCreateWithoutAccountsInput>
  connectOrCreate?: Prisma.OperadoresCreateOrConnectWithoutAccountsInput
  upsert?: Prisma.OperadoresUpsertWithoutAccountsInput
  connect?: Prisma.OperadoresWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OperadoresUpdateToOneWithWhereWithoutAccountsInput, Prisma.OperadoresUpdateWithoutAccountsInput>, Prisma.OperadoresUncheckedUpdateWithoutAccountsInput>
}

export type OperadoresCreateNestedOneWithoutEmprestimosGeradosInput = {
  create?: Prisma.XOR<Prisma.OperadoresCreateWithoutEmprestimosGeradosInput, Prisma.OperadoresUncheckedCreateWithoutEmprestimosGeradosInput>
  connectOrCreate?: Prisma.OperadoresCreateOrConnectWithoutEmprestimosGeradosInput
  connect?: Prisma.OperadoresWhereUniqueInput
}

export type OperadoresUpdateOneWithoutEmprestimosGeradosNestedInput = {
  create?: Prisma.XOR<Prisma.OperadoresCreateWithoutEmprestimosGeradosInput, Prisma.OperadoresUncheckedCreateWithoutEmprestimosGeradosInput>
  connectOrCreate?: Prisma.OperadoresCreateOrConnectWithoutEmprestimosGeradosInput
  upsert?: Prisma.OperadoresUpsertWithoutEmprestimosGeradosInput
  disconnect?: Prisma.OperadoresWhereInput | boolean
  delete?: Prisma.OperadoresWhereInput | boolean
  connect?: Prisma.OperadoresWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OperadoresUpdateToOneWithWhereWithoutEmprestimosGeradosInput, Prisma.OperadoresUpdateWithoutEmprestimosGeradosInput>, Prisma.OperadoresUncheckedUpdateWithoutEmprestimosGeradosInput>
}

export type OperadoresCreateWithoutSessionsInput = {
  id: string
  name: string
  email: string
  emailVerified?: boolean
  image?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput
  EmprestimosGerados?: Prisma.EmprestimoCreateNestedManyWithoutOperadorInput
}

export type OperadoresUncheckedCreateWithoutSessionsInput = {
  id: string
  name: string
  email: string
  emailVerified?: boolean
  image?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput
  EmprestimosGerados?: Prisma.EmprestimoUncheckedCreateNestedManyWithoutOperadorInput
}

export type OperadoresCreateOrConnectWithoutSessionsInput = {
  where: Prisma.OperadoresWhereUniqueInput
  create: Prisma.XOR<Prisma.OperadoresCreateWithoutSessionsInput, Prisma.OperadoresUncheckedCreateWithoutSessionsInput>
}

export type OperadoresUpsertWithoutSessionsInput = {
  update: Prisma.XOR<Prisma.OperadoresUpdateWithoutSessionsInput, Prisma.OperadoresUncheckedUpdateWithoutSessionsInput>
  create: Prisma.XOR<Prisma.OperadoresCreateWithoutSessionsInput, Prisma.OperadoresUncheckedCreateWithoutSessionsInput>
  where?: Prisma.OperadoresWhereInput
}

export type OperadoresUpdateToOneWithWhereWithoutSessionsInput = {
  where?: Prisma.OperadoresWhereInput
  data: Prisma.XOR<Prisma.OperadoresUpdateWithoutSessionsInput, Prisma.OperadoresUncheckedUpdateWithoutSessionsInput>
}

export type OperadoresUpdateWithoutSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput
  EmprestimosGerados?: Prisma.EmprestimoUpdateManyWithoutOperadorNestedInput
}

export type OperadoresUncheckedUpdateWithoutSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput
  EmprestimosGerados?: Prisma.EmprestimoUncheckedUpdateManyWithoutOperadorNestedInput
}

export type OperadoresCreateWithoutAccountsInput = {
  id: string
  name: string
  email: string
  emailVerified?: boolean
  image?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  EmprestimosGerados?: Prisma.EmprestimoCreateNestedManyWithoutOperadorInput
}

export type OperadoresUncheckedCreateWithoutAccountsInput = {
  id: string
  name: string
  email: string
  emailVerified?: boolean
  image?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  EmprestimosGerados?: Prisma.EmprestimoUncheckedCreateNestedManyWithoutOperadorInput
}

export type OperadoresCreateOrConnectWithoutAccountsInput = {
  where: Prisma.OperadoresWhereUniqueInput
  create: Prisma.XOR<Prisma.OperadoresCreateWithoutAccountsInput, Prisma.OperadoresUncheckedCreateWithoutAccountsInput>
}

export type OperadoresUpsertWithoutAccountsInput = {
  update: Prisma.XOR<Prisma.OperadoresUpdateWithoutAccountsInput, Prisma.OperadoresUncheckedUpdateWithoutAccountsInput>
  create: Prisma.XOR<Prisma.OperadoresCreateWithoutAccountsInput, Prisma.OperadoresUncheckedCreateWithoutAccountsInput>
  where?: Prisma.OperadoresWhereInput
}

export type OperadoresUpdateToOneWithWhereWithoutAccountsInput = {
  where?: Prisma.OperadoresWhereInput
  data: Prisma.XOR<Prisma.OperadoresUpdateWithoutAccountsInput, Prisma.OperadoresUncheckedUpdateWithoutAccountsInput>
}

export type OperadoresUpdateWithoutAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  EmprestimosGerados?: Prisma.EmprestimoUpdateManyWithoutOperadorNestedInput
}

export type OperadoresUncheckedUpdateWithoutAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  EmprestimosGerados?: Prisma.EmprestimoUncheckedUpdateManyWithoutOperadorNestedInput
}

export type OperadoresCreateWithoutEmprestimosGeradosInput = {
  id: string
  name: string
  email: string
  emailVerified?: boolean
  image?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput
}

export type OperadoresUncheckedCreateWithoutEmprestimosGeradosInput = {
  id: string
  name: string
  email: string
  emailVerified?: boolean
  image?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput
}

export type OperadoresCreateOrConnectWithoutEmprestimosGeradosInput = {
  where: Prisma.OperadoresWhereUniqueInput
  create: Prisma.XOR<Prisma.OperadoresCreateWithoutEmprestimosGeradosInput, Prisma.OperadoresUncheckedCreateWithoutEmprestimosGeradosInput>
}

export type OperadoresUpsertWithoutEmprestimosGeradosInput = {
  update: Prisma.XOR<Prisma.OperadoresUpdateWithoutEmprestimosGeradosInput, Prisma.OperadoresUncheckedUpdateWithoutEmprestimosGeradosInput>
  create: Prisma.XOR<Prisma.OperadoresCreateWithoutEmprestimosGeradosInput, Prisma.OperadoresUncheckedCreateWithoutEmprestimosGeradosInput>
  where?: Prisma.OperadoresWhereInput
}

export type OperadoresUpdateToOneWithWhereWithoutEmprestimosGeradosInput = {
  where?: Prisma.OperadoresWhereInput
  data: Prisma.XOR<Prisma.OperadoresUpdateWithoutEmprestimosGeradosInput, Prisma.OperadoresUncheckedUpdateWithoutEmprestimosGeradosInput>
}

export type OperadoresUpdateWithoutEmprestimosGeradosInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput
}

export type OperadoresUncheckedUpdateWithoutEmprestimosGeradosInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  emailVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  image?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput
}


/**
 * Count Type OperadoresCountOutputType
 */

export type OperadoresCountOutputType = {
  sessions: number
  accounts: number
  EmprestimosGerados: number
}

export type OperadoresCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  sessions?: boolean | OperadoresCountOutputTypeCountSessionsArgs
  accounts?: boolean | OperadoresCountOutputTypeCountAccountsArgs
  EmprestimosGerados?: boolean | OperadoresCountOutputTypeCountEmprestimosGeradosArgs
}

/**
 * OperadoresCountOutputType without action
 */
export type OperadoresCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OperadoresCountOutputType
   */
  select?: Prisma.OperadoresCountOutputTypeSelect<ExtArgs> | null
}

/**
 * OperadoresCountOutputType without action
 */
export type OperadoresCountOutputTypeCountSessionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SessionWhereInput
}

/**
 * OperadoresCountOutputType without action
 */
export type OperadoresCountOutputTypeCountAccountsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AccountWhereInput
}

/**
 * OperadoresCountOutputType without action
 */
export type OperadoresCountOutputTypeCountEmprestimosGeradosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EmprestimoWhereInput
}


export type OperadoresSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  email?: boolean
  emailVerified?: boolean
  image?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  sessions?: boolean | Prisma.Operadores$sessionsArgs<ExtArgs>
  accounts?: boolean | Prisma.Operadores$accountsArgs<ExtArgs>
  EmprestimosGerados?: boolean | Prisma.Operadores$EmprestimosGeradosArgs<ExtArgs>
  _count?: boolean | Prisma.OperadoresCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["operadores"]>

export type OperadoresSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  email?: boolean
  emailVerified?: boolean
  image?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["operadores"]>

export type OperadoresSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  email?: boolean
  emailVerified?: boolean
  image?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["operadores"]>

export type OperadoresSelectScalar = {
  id?: boolean
  name?: boolean
  email?: boolean
  emailVerified?: boolean
  image?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type OperadoresOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "email" | "emailVerified" | "image" | "createdAt" | "updatedAt", ExtArgs["result"]["operadores"]>
export type OperadoresInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  sessions?: boolean | Prisma.Operadores$sessionsArgs<ExtArgs>
  accounts?: boolean | Prisma.Operadores$accountsArgs<ExtArgs>
  EmprestimosGerados?: boolean | Prisma.Operadores$EmprestimosGeradosArgs<ExtArgs>
  _count?: boolean | Prisma.OperadoresCountOutputTypeDefaultArgs<ExtArgs>
}
export type OperadoresIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type OperadoresIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $OperadoresPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Operadores"
  objects: {
    sessions: Prisma.$SessionPayload<ExtArgs>[]
    accounts: Prisma.$AccountPayload<ExtArgs>[]
    EmprestimosGerados: Prisma.$EmprestimoPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    email: string
    emailVerified: boolean
    image: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["operadores"]>
  composites: {}
}

export type OperadoresGetPayload<S extends boolean | null | undefined | OperadoresDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$OperadoresPayload, S>

export type OperadoresCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<OperadoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: OperadoresCountAggregateInputType | true
  }

export interface OperadoresDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Operadores'], meta: { name: 'Operadores' } }
  /**
   * Find zero or one Operadores that matches the filter.
   * @param {OperadoresFindUniqueArgs} args - Arguments to find a Operadores
   * @example
   * // Get one Operadores
   * const operadores = await prisma.operadores.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OperadoresFindUniqueArgs>(args: Prisma.SelectSubset<T, OperadoresFindUniqueArgs<ExtArgs>>): Prisma.Prisma__OperadoresClient<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Operadores that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OperadoresFindUniqueOrThrowArgs} args - Arguments to find a Operadores
   * @example
   * // Get one Operadores
   * const operadores = await prisma.operadores.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OperadoresFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, OperadoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__OperadoresClient<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Operadores that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperadoresFindFirstArgs} args - Arguments to find a Operadores
   * @example
   * // Get one Operadores
   * const operadores = await prisma.operadores.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OperadoresFindFirstArgs>(args?: Prisma.SelectSubset<T, OperadoresFindFirstArgs<ExtArgs>>): Prisma.Prisma__OperadoresClient<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Operadores that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperadoresFindFirstOrThrowArgs} args - Arguments to find a Operadores
   * @example
   * // Get one Operadores
   * const operadores = await prisma.operadores.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OperadoresFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, OperadoresFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__OperadoresClient<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Operadores that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperadoresFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Operadores
   * const operadores = await prisma.operadores.findMany()
   * 
   * // Get first 10 Operadores
   * const operadores = await prisma.operadores.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const operadoresWithIdOnly = await prisma.operadores.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends OperadoresFindManyArgs>(args?: Prisma.SelectSubset<T, OperadoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Operadores.
   * @param {OperadoresCreateArgs} args - Arguments to create a Operadores.
   * @example
   * // Create one Operadores
   * const Operadores = await prisma.operadores.create({
   *   data: {
   *     // ... data to create a Operadores
   *   }
   * })
   * 
   */
  create<T extends OperadoresCreateArgs>(args: Prisma.SelectSubset<T, OperadoresCreateArgs<ExtArgs>>): Prisma.Prisma__OperadoresClient<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Operadores.
   * @param {OperadoresCreateManyArgs} args - Arguments to create many Operadores.
   * @example
   * // Create many Operadores
   * const operadores = await prisma.operadores.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends OperadoresCreateManyArgs>(args?: Prisma.SelectSubset<T, OperadoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Operadores and returns the data saved in the database.
   * @param {OperadoresCreateManyAndReturnArgs} args - Arguments to create many Operadores.
   * @example
   * // Create many Operadores
   * const operadores = await prisma.operadores.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Operadores and only return the `id`
   * const operadoresWithIdOnly = await prisma.operadores.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends OperadoresCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, OperadoresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Operadores.
   * @param {OperadoresDeleteArgs} args - Arguments to delete one Operadores.
   * @example
   * // Delete one Operadores
   * const Operadores = await prisma.operadores.delete({
   *   where: {
   *     // ... filter to delete one Operadores
   *   }
   * })
   * 
   */
  delete<T extends OperadoresDeleteArgs>(args: Prisma.SelectSubset<T, OperadoresDeleteArgs<ExtArgs>>): Prisma.Prisma__OperadoresClient<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Operadores.
   * @param {OperadoresUpdateArgs} args - Arguments to update one Operadores.
   * @example
   * // Update one Operadores
   * const operadores = await prisma.operadores.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends OperadoresUpdateArgs>(args: Prisma.SelectSubset<T, OperadoresUpdateArgs<ExtArgs>>): Prisma.Prisma__OperadoresClient<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Operadores.
   * @param {OperadoresDeleteManyArgs} args - Arguments to filter Operadores to delete.
   * @example
   * // Delete a few Operadores
   * const { count } = await prisma.operadores.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends OperadoresDeleteManyArgs>(args?: Prisma.SelectSubset<T, OperadoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Operadores.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperadoresUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Operadores
   * const operadores = await prisma.operadores.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends OperadoresUpdateManyArgs>(args: Prisma.SelectSubset<T, OperadoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Operadores and returns the data updated in the database.
   * @param {OperadoresUpdateManyAndReturnArgs} args - Arguments to update many Operadores.
   * @example
   * // Update many Operadores
   * const operadores = await prisma.operadores.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Operadores and only return the `id`
   * const operadoresWithIdOnly = await prisma.operadores.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends OperadoresUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, OperadoresUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Operadores.
   * @param {OperadoresUpsertArgs} args - Arguments to update or create a Operadores.
   * @example
   * // Update or create a Operadores
   * const operadores = await prisma.operadores.upsert({
   *   create: {
   *     // ... data to create a Operadores
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Operadores we want to update
   *   }
   * })
   */
  upsert<T extends OperadoresUpsertArgs>(args: Prisma.SelectSubset<T, OperadoresUpsertArgs<ExtArgs>>): Prisma.Prisma__OperadoresClient<runtime.Types.Result.GetResult<Prisma.$OperadoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Operadores.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperadoresCountArgs} args - Arguments to filter Operadores to count.
   * @example
   * // Count the number of Operadores
   * const count = await prisma.operadores.count({
   *   where: {
   *     // ... the filter for the Operadores we want to count
   *   }
   * })
  **/
  count<T extends OperadoresCountArgs>(
    args?: Prisma.Subset<T, OperadoresCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], OperadoresCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Operadores.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperadoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends OperadoresAggregateArgs>(args: Prisma.Subset<T, OperadoresAggregateArgs>): Prisma.PrismaPromise<GetOperadoresAggregateType<T>>

  /**
   * Group by Operadores.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperadoresGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends OperadoresGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OperadoresGroupByArgs['orderBy'] }
      : { orderBy?: OperadoresGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, OperadoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOperadoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Operadores model
 */
readonly fields: OperadoresFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Operadores.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OperadoresClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  sessions<T extends Prisma.Operadores$sessionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Operadores$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  accounts<T extends Prisma.Operadores$accountsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Operadores$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  EmprestimosGerados<T extends Prisma.Operadores$EmprestimosGeradosArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Operadores$EmprestimosGeradosArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EmprestimoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Operadores model
 */
export interface OperadoresFieldRefs {
  readonly id: Prisma.FieldRef<"Operadores", 'String'>
  readonly name: Prisma.FieldRef<"Operadores", 'String'>
  readonly email: Prisma.FieldRef<"Operadores", 'String'>
  readonly emailVerified: Prisma.FieldRef<"Operadores", 'Boolean'>
  readonly image: Prisma.FieldRef<"Operadores", 'String'>
  readonly createdAt: Prisma.FieldRef<"Operadores", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Operadores", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Operadores findUnique
 */
export type OperadoresFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperadoresInclude<ExtArgs> | null
  /**
   * Filter, which Operadores to fetch.
   */
  where: Prisma.OperadoresWhereUniqueInput
}

/**
 * Operadores findUniqueOrThrow
 */
export type OperadoresFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperadoresInclude<ExtArgs> | null
  /**
   * Filter, which Operadores to fetch.
   */
  where: Prisma.OperadoresWhereUniqueInput
}

/**
 * Operadores findFirst
 */
export type OperadoresFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperadoresInclude<ExtArgs> | null
  /**
   * Filter, which Operadores to fetch.
   */
  where?: Prisma.OperadoresWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operadores to fetch.
   */
  orderBy?: Prisma.OperadoresOrderByWithRelationInput | Prisma.OperadoresOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Operadores.
   */
  cursor?: Prisma.OperadoresWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operadores from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operadores.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Operadores.
   */
  distinct?: Prisma.OperadoresScalarFieldEnum | Prisma.OperadoresScalarFieldEnum[]
}

/**
 * Operadores findFirstOrThrow
 */
export type OperadoresFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperadoresInclude<ExtArgs> | null
  /**
   * Filter, which Operadores to fetch.
   */
  where?: Prisma.OperadoresWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operadores to fetch.
   */
  orderBy?: Prisma.OperadoresOrderByWithRelationInput | Prisma.OperadoresOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Operadores.
   */
  cursor?: Prisma.OperadoresWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operadores from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operadores.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Operadores.
   */
  distinct?: Prisma.OperadoresScalarFieldEnum | Prisma.OperadoresScalarFieldEnum[]
}

/**
 * Operadores findMany
 */
export type OperadoresFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperadoresInclude<ExtArgs> | null
  /**
   * Filter, which Operadores to fetch.
   */
  where?: Prisma.OperadoresWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operadores to fetch.
   */
  orderBy?: Prisma.OperadoresOrderByWithRelationInput | Prisma.OperadoresOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Operadores.
   */
  cursor?: Prisma.OperadoresWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operadores from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operadores.
   */
  skip?: number
  distinct?: Prisma.OperadoresScalarFieldEnum | Prisma.OperadoresScalarFieldEnum[]
}

/**
 * Operadores create
 */
export type OperadoresCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperadoresInclude<ExtArgs> | null
  /**
   * The data needed to create a Operadores.
   */
  data: Prisma.XOR<Prisma.OperadoresCreateInput, Prisma.OperadoresUncheckedCreateInput>
}

/**
 * Operadores createMany
 */
export type OperadoresCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Operadores.
   */
  data: Prisma.OperadoresCreateManyInput | Prisma.OperadoresCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Operadores createManyAndReturn
 */
export type OperadoresCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * The data used to create many Operadores.
   */
  data: Prisma.OperadoresCreateManyInput | Prisma.OperadoresCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Operadores update
 */
export type OperadoresUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperadoresInclude<ExtArgs> | null
  /**
   * The data needed to update a Operadores.
   */
  data: Prisma.XOR<Prisma.OperadoresUpdateInput, Prisma.OperadoresUncheckedUpdateInput>
  /**
   * Choose, which Operadores to update.
   */
  where: Prisma.OperadoresWhereUniqueInput
}

/**
 * Operadores updateMany
 */
export type OperadoresUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Operadores.
   */
  data: Prisma.XOR<Prisma.OperadoresUpdateManyMutationInput, Prisma.OperadoresUncheckedUpdateManyInput>
  /**
   * Filter which Operadores to update
   */
  where?: Prisma.OperadoresWhereInput
  /**
   * Limit how many Operadores to update.
   */
  limit?: number
}

/**
 * Operadores updateManyAndReturn
 */
export type OperadoresUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * The data used to update Operadores.
   */
  data: Prisma.XOR<Prisma.OperadoresUpdateManyMutationInput, Prisma.OperadoresUncheckedUpdateManyInput>
  /**
   * Filter which Operadores to update
   */
  where?: Prisma.OperadoresWhereInput
  /**
   * Limit how many Operadores to update.
   */
  limit?: number
}

/**
 * Operadores upsert
 */
export type OperadoresUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperadoresInclude<ExtArgs> | null
  /**
   * The filter to search for the Operadores to update in case it exists.
   */
  where: Prisma.OperadoresWhereUniqueInput
  /**
   * In case the Operadores found by the `where` argument doesn't exist, create a new Operadores with this data.
   */
  create: Prisma.XOR<Prisma.OperadoresCreateInput, Prisma.OperadoresUncheckedCreateInput>
  /**
   * In case the Operadores was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.OperadoresUpdateInput, Prisma.OperadoresUncheckedUpdateInput>
}

/**
 * Operadores delete
 */
export type OperadoresDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperadoresInclude<ExtArgs> | null
  /**
   * Filter which Operadores to delete.
   */
  where: Prisma.OperadoresWhereUniqueInput
}

/**
 * Operadores deleteMany
 */
export type OperadoresDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Operadores to delete
   */
  where?: Prisma.OperadoresWhereInput
  /**
   * Limit how many Operadores to delete.
   */
  limit?: number
}

/**
 * Operadores.sessions
 */
export type Operadores$sessionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Session
   */
  select?: Prisma.SessionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Session
   */
  omit?: Prisma.SessionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionInclude<ExtArgs> | null
  where?: Prisma.SessionWhereInput
  orderBy?: Prisma.SessionOrderByWithRelationInput | Prisma.SessionOrderByWithRelationInput[]
  cursor?: Prisma.SessionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SessionScalarFieldEnum | Prisma.SessionScalarFieldEnum[]
}

/**
 * Operadores.accounts
 */
export type Operadores$accountsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Account
   */
  select?: Prisma.AccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Account
   */
  omit?: Prisma.AccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountInclude<ExtArgs> | null
  where?: Prisma.AccountWhereInput
  orderBy?: Prisma.AccountOrderByWithRelationInput | Prisma.AccountOrderByWithRelationInput[]
  cursor?: Prisma.AccountWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AccountScalarFieldEnum | Prisma.AccountScalarFieldEnum[]
}

/**
 * Operadores.EmprestimosGerados
 */
export type Operadores$EmprestimosGeradosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Emprestimo
   */
  select?: Prisma.EmprestimoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Emprestimo
   */
  omit?: Prisma.EmprestimoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmprestimoInclude<ExtArgs> | null
  where?: Prisma.EmprestimoWhereInput
  orderBy?: Prisma.EmprestimoOrderByWithRelationInput | Prisma.EmprestimoOrderByWithRelationInput[]
  cursor?: Prisma.EmprestimoWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EmprestimoScalarFieldEnum | Prisma.EmprestimoScalarFieldEnum[]
}

/**
 * Operadores without action
 */
export type OperadoresDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operadores
   */
  select?: Prisma.OperadoresSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operadores
   */
  omit?: Prisma.OperadoresOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperadoresInclude<ExtArgs> | null
}
