/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */
import * as runtime from "@prisma/client/runtime/index-browser";
export const Decimal = runtime.Decimal;
export const ModelName = {
    Operadores: 'Operadores',
    Session: 'Session',
    Account: 'Account',
    Usuarios: 'Usuarios',
    Verification: 'Verification',
    Emprestimo: 'Emprestimo',
    Chave: 'Chave',
    Chaves_Usuarios: 'Chaves_Usuarios',
    Ambiente: 'Ambiente',
    Armario: 'Armario'
};
/**
 * Enums
 */
export const TransactionIsolationLevel = runtime.makeStrictEnum({
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
});
export const OperadoresScalarFieldEnum = {
    id: 'id',
    name: 'name',
    email: 'email',
    emailVerified: 'emailVerified',
    image: 'image',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    role: 'role'
};
export const SessionScalarFieldEnum = {
    id: 'id',
    expiresAt: 'expiresAt',
    token: 'token',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    userId: 'userId'
};
export const AccountScalarFieldEnum = {
    id: 'id',
    accountId: 'accountId',
    providerId: 'providerId',
    userId: 'userId',
    accessToken: 'accessToken',
    refreshToken: 'refreshToken',
    idToken: 'idToken',
    accessTokenExpiresAt: 'accessTokenExpiresAt',
    refreshTokenExpiresAt: 'refreshTokenExpiresAt',
    scope: 'scope',
    password: 'password',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
};
export const UsuariosScalarFieldEnum = {
    id: 'id',
    nome: 'nome',
    matricula: 'matricula'
};
export const VerificationScalarFieldEnum = {
    id: 'id',
    identifier: 'identifier',
    value: 'value',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
};
export const EmprestimoScalarFieldEnum = {
    id: 'id',
    chaveId: 'chaveId',
    usuarioSolicitanteId: 'usuarioSolicitanteId',
    usuarioDevolucaoId: 'usuarioDevolucaoId',
    operadorId: 'operadorId',
    dataRetirada: 'dataRetirada',
    dataRetorno: 'dataRetorno',
    status: 'status',
    tipo: 'tipo',
    justificativa: 'justificativa',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
};
export const ChaveScalarFieldEnum = {
    id: 'id',
    ambienteId: 'ambienteId',
    armarioId: 'armarioId',
    tipo: 'tipo'
};
export const Chaves_UsuariosScalarFieldEnum = {
    id: 'id',
    chaveId: 'chaveId',
    usuarioId: 'usuarioId'
};
export const AmbienteScalarFieldEnum = {
    id: 'id',
    codigo: 'codigo',
    nome: 'nome',
    capacidade: 'capacidade',
    localizacao: 'localizacao',
    tipo: 'tipo',
    precisaReserva: 'precisaReserva'
};
export const ArmarioScalarFieldEnum = {
    id: 'id',
    codigo: 'codigo',
    localizacao: 'localizacao',
    bloco: 'bloco',
    andar: 'andar'
};
export const SortOrder = {
    asc: 'asc',
    desc: 'desc'
};
export const QueryMode = {
    default: 'default',
    insensitive: 'insensitive'
};
export const NullsOrder = {
    first: 'first',
    last: 'last'
};
//# sourceMappingURL=prismaNamespaceBrowser.js.map