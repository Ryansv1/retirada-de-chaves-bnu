image: docker:27-cli

stages:
  - validate_env
  - migrate_seed
  - build
  - portainer

validate_env:
  stage: validate_env
  image: alpine:latest
  only:
    - master
    - main
  script:
    - |
      apk add --no-cache grep
      for var in $(grep -v -e '^#' -e '^$' .env.example | cut -d '=' -f 1); do
        if ! printenv | grep -q "^${var}="; then
          echo "Error: Environment variable $var is not set."
          exit 1
        fi
      done
      echo "Environment variables check passed."

migrate_seed:
  stage: migrate_seed
  image: node:20-slim
  only:
    - master
    - main
  script:
    - apt-get update && apt-get install -y openssl
    - npm install -g pnpm
    - pnpm install
    - pnpm exec prisma migrate deploy
    - pnpm exec prisma db seed

### BUILD
build:
  stage: build
  only:
    - master
    - main
  script:
    - docker build . -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" --no-cache 
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER  -p $CI_REGISTRY_PASSWORD
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

#### DEPLOY
#
# Exige configuração no PORTAINER e GITLAB 
#
# WEBHOOK_PORTAINER: Possui a URL para rebootar o Serviço em produção
# URL de Webhook será enviada pela SeTIC mediante requisição via chamado.
# Esta variável deve ser configurada no codigos.ufsc.br:
#  Dentro do projeto > Settings > CI/CD > Secret Variables
portainer: 
  stage: portainer
  only:
    - master
    - main
  variables:
    GIT_CHECKOUT: "false"
  script:
          - if [[ ! -z "${WEBHOOK_PORTAINER}" ]]; then
            for url in $(echo ${WEBHOOK_PORTAINER} | sed "s/,/ /g"); do wget --post-data '' -O - "$url"; done
            else
              echo "Empty \$WEBHOOK_PORTAINER" ; exit 1;
            fi