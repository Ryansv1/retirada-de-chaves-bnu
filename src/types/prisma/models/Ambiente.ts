
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Ambiente` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Ambiente
 * 
 */
export type AmbienteModel = runtime.Types.Result.DefaultSelection<Prisma.$AmbientePayload>

export type AggregateAmbiente = {
  _count: AmbienteCountAggregateOutputType | null
  _avg: AmbienteAvgAggregateOutputType | null
  _sum: AmbienteSumAggregateOutputType | null
  _min: AmbienteMinAggregateOutputType | null
  _max: AmbienteMaxAggregateOutputType | null
}

export type AmbienteAvgAggregateOutputType = {
  capacidade: number | null
}

export type AmbienteSumAggregateOutputType = {
  capacidade: number | null
}

export type AmbienteMinAggregateOutputType = {
  id: string | null
  codigo: string | null
  nome: string | null
  capacidade: number | null
  localizacao: $Enums.Localizacao | null
  tipo: $Enums.TipoAmbiente | null
  precisaReserva: boolean | null
}

export type AmbienteMaxAggregateOutputType = {
  id: string | null
  codigo: string | null
  nome: string | null
  capacidade: number | null
  localizacao: $Enums.Localizacao | null
  tipo: $Enums.TipoAmbiente | null
  precisaReserva: boolean | null
}

export type AmbienteCountAggregateOutputType = {
  id: number
  codigo: number
  nome: number
  capacidade: number
  localizacao: number
  tipo: number
  precisaReserva: number
  _all: number
}


export type AmbienteAvgAggregateInputType = {
  capacidade?: true
}

export type AmbienteSumAggregateInputType = {
  capacidade?: true
}

export type AmbienteMinAggregateInputType = {
  id?: true
  codigo?: true
  nome?: true
  capacidade?: true
  localizacao?: true
  tipo?: true
  precisaReserva?: true
}

export type AmbienteMaxAggregateInputType = {
  id?: true
  codigo?: true
  nome?: true
  capacidade?: true
  localizacao?: true
  tipo?: true
  precisaReserva?: true
}

export type AmbienteCountAggregateInputType = {
  id?: true
  codigo?: true
  nome?: true
  capacidade?: true
  localizacao?: true
  tipo?: true
  precisaReserva?: true
  _all?: true
}

export type AmbienteAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Ambiente to aggregate.
   */
  where?: Prisma.AmbienteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Ambientes to fetch.
   */
  orderBy?: Prisma.AmbienteOrderByWithRelationInput | Prisma.AmbienteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.AmbienteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Ambientes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Ambientes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Ambientes
  **/
  _count?: true | AmbienteCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: AmbienteAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: AmbienteSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AmbienteMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AmbienteMaxAggregateInputType
}

export type GetAmbienteAggregateType<T extends AmbienteAggregateArgs> = {
      [P in keyof T & keyof AggregateAmbiente]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAmbiente[P]>
    : Prisma.GetScalarType<T[P], AggregateAmbiente[P]>
}




export type AmbienteGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AmbienteWhereInput
  orderBy?: Prisma.AmbienteOrderByWithAggregationInput | Prisma.AmbienteOrderByWithAggregationInput[]
  by: Prisma.AmbienteScalarFieldEnum[] | Prisma.AmbienteScalarFieldEnum
  having?: Prisma.AmbienteScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AmbienteCountAggregateInputType | true
  _avg?: AmbienteAvgAggregateInputType
  _sum?: AmbienteSumAggregateInputType
  _min?: AmbienteMinAggregateInputType
  _max?: AmbienteMaxAggregateInputType
}

export type AmbienteGroupByOutputType = {
  id: string
  codigo: string
  nome: string
  capacidade: number
  localizacao: $Enums.Localizacao
  tipo: $Enums.TipoAmbiente
  precisaReserva: boolean
  _count: AmbienteCountAggregateOutputType | null
  _avg: AmbienteAvgAggregateOutputType | null
  _sum: AmbienteSumAggregateOutputType | null
  _min: AmbienteMinAggregateOutputType | null
  _max: AmbienteMaxAggregateOutputType | null
}

type GetAmbienteGroupByPayload<T extends AmbienteGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AmbienteGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AmbienteGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AmbienteGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AmbienteGroupByOutputType[P]>
      }
    >
  >



export type AmbienteWhereInput = {
  AND?: Prisma.AmbienteWhereInput | Prisma.AmbienteWhereInput[]
  OR?: Prisma.AmbienteWhereInput[]
  NOT?: Prisma.AmbienteWhereInput | Prisma.AmbienteWhereInput[]
  id?: Prisma.StringFilter<"Ambiente"> | string
  codigo?: Prisma.StringFilter<"Ambiente"> | string
  nome?: Prisma.StringFilter<"Ambiente"> | string
  capacidade?: Prisma.IntFilter<"Ambiente"> | number
  localizacao?: Prisma.EnumLocalizacaoFilter<"Ambiente"> | $Enums.Localizacao
  tipo?: Prisma.EnumTipoAmbienteFilter<"Ambiente"> | $Enums.TipoAmbiente
  precisaReserva?: Prisma.BoolFilter<"Ambiente"> | boolean
  Chave?: Prisma.XOR<Prisma.ChaveNullableScalarRelationFilter, Prisma.ChaveWhereInput> | null
}

export type AmbienteOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  codigo?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  capacidade?: Prisma.SortOrder
  localizacao?: Prisma.SortOrder
  tipo?: Prisma.SortOrder
  precisaReserva?: Prisma.SortOrder
  Chave?: Prisma.ChaveOrderByWithRelationInput
}

export type AmbienteWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  codigo_localizacao?: Prisma.AmbienteCodigoLocalizacaoCompoundUniqueInput
  AND?: Prisma.AmbienteWhereInput | Prisma.AmbienteWhereInput[]
  OR?: Prisma.AmbienteWhereInput[]
  NOT?: Prisma.AmbienteWhereInput | Prisma.AmbienteWhereInput[]
  codigo?: Prisma.StringFilter<"Ambiente"> | string
  nome?: Prisma.StringFilter<"Ambiente"> | string
  capacidade?: Prisma.IntFilter<"Ambiente"> | number
  localizacao?: Prisma.EnumLocalizacaoFilter<"Ambiente"> | $Enums.Localizacao
  tipo?: Prisma.EnumTipoAmbienteFilter<"Ambiente"> | $Enums.TipoAmbiente
  precisaReserva?: Prisma.BoolFilter<"Ambiente"> | boolean
  Chave?: Prisma.XOR<Prisma.ChaveNullableScalarRelationFilter, Prisma.ChaveWhereInput> | null
}, "id" | "codigo_localizacao">

export type AmbienteOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  codigo?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  capacidade?: Prisma.SortOrder
  localizacao?: Prisma.SortOrder
  tipo?: Prisma.SortOrder
  precisaReserva?: Prisma.SortOrder
  _count?: Prisma.AmbienteCountOrderByAggregateInput
  _avg?: Prisma.AmbienteAvgOrderByAggregateInput
  _max?: Prisma.AmbienteMaxOrderByAggregateInput
  _min?: Prisma.AmbienteMinOrderByAggregateInput
  _sum?: Prisma.AmbienteSumOrderByAggregateInput
}

export type AmbienteScalarWhereWithAggregatesInput = {
  AND?: Prisma.AmbienteScalarWhereWithAggregatesInput | Prisma.AmbienteScalarWhereWithAggregatesInput[]
  OR?: Prisma.AmbienteScalarWhereWithAggregatesInput[]
  NOT?: Prisma.AmbienteScalarWhereWithAggregatesInput | Prisma.AmbienteScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Ambiente"> | string
  codigo?: Prisma.StringWithAggregatesFilter<"Ambiente"> | string
  nome?: Prisma.StringWithAggregatesFilter<"Ambiente"> | string
  capacidade?: Prisma.IntWithAggregatesFilter<"Ambiente"> | number
  localizacao?: Prisma.EnumLocalizacaoWithAggregatesFilter<"Ambiente"> | $Enums.Localizacao
  tipo?: Prisma.EnumTipoAmbienteWithAggregatesFilter<"Ambiente"> | $Enums.TipoAmbiente
  precisaReserva?: Prisma.BoolWithAggregatesFilter<"Ambiente"> | boolean
}

export type AmbienteCreateInput = {
  id: string
  codigo: string
  nome: string
  capacidade: number
  localizacao: $Enums.Localizacao
  tipo: $Enums.TipoAmbiente
  precisaReserva?: boolean
  Chave?: Prisma.ChaveCreateNestedOneWithoutAmbienteInput
}

export type AmbienteUncheckedCreateInput = {
  id: string
  codigo: string
  nome: string
  capacidade: number
  localizacao: $Enums.Localizacao
  tipo: $Enums.TipoAmbiente
  precisaReserva?: boolean
  Chave?: Prisma.ChaveUncheckedCreateNestedOneWithoutAmbienteInput
}

export type AmbienteUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  capacidade?: Prisma.IntFieldUpdateOperationsInput | number
  localizacao?: Prisma.EnumLocalizacaoFieldUpdateOperationsInput | $Enums.Localizacao
  tipo?: Prisma.EnumTipoAmbienteFieldUpdateOperationsInput | $Enums.TipoAmbiente
  precisaReserva?: Prisma.BoolFieldUpdateOperationsInput | boolean
  Chave?: Prisma.ChaveUpdateOneWithoutAmbienteNestedInput
}

export type AmbienteUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  capacidade?: Prisma.IntFieldUpdateOperationsInput | number
  localizacao?: Prisma.EnumLocalizacaoFieldUpdateOperationsInput | $Enums.Localizacao
  tipo?: Prisma.EnumTipoAmbienteFieldUpdateOperationsInput | $Enums.TipoAmbiente
  precisaReserva?: Prisma.BoolFieldUpdateOperationsInput | boolean
  Chave?: Prisma.ChaveUncheckedUpdateOneWithoutAmbienteNestedInput
}

export type AmbienteCreateManyInput = {
  id: string
  codigo: string
  nome: string
  capacidade: number
  localizacao: $Enums.Localizacao
  tipo: $Enums.TipoAmbiente
  precisaReserva?: boolean
}

export type AmbienteUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  capacidade?: Prisma.IntFieldUpdateOperationsInput | number
  localizacao?: Prisma.EnumLocalizacaoFieldUpdateOperationsInput | $Enums.Localizacao
  tipo?: Prisma.EnumTipoAmbienteFieldUpdateOperationsInput | $Enums.TipoAmbiente
  precisaReserva?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type AmbienteUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  capacidade?: Prisma.IntFieldUpdateOperationsInput | number
  localizacao?: Prisma.EnumLocalizacaoFieldUpdateOperationsInput | $Enums.Localizacao
  tipo?: Prisma.EnumTipoAmbienteFieldUpdateOperationsInput | $Enums.TipoAmbiente
  precisaReserva?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type AmbienteNullableScalarRelationFilter = {
  is?: Prisma.AmbienteWhereInput | null
  isNot?: Prisma.AmbienteWhereInput | null
}

export type AmbienteCodigoLocalizacaoCompoundUniqueInput = {
  codigo: string
  localizacao: $Enums.Localizacao
}

export type AmbienteCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  codigo?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  capacidade?: Prisma.SortOrder
  localizacao?: Prisma.SortOrder
  tipo?: Prisma.SortOrder
  precisaReserva?: Prisma.SortOrder
}

export type AmbienteAvgOrderByAggregateInput = {
  capacidade?: Prisma.SortOrder
}

export type AmbienteMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  codigo?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  capacidade?: Prisma.SortOrder
  localizacao?: Prisma.SortOrder
  tipo?: Prisma.SortOrder
  precisaReserva?: Prisma.SortOrder
}

export type AmbienteMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  codigo?: Prisma.SortOrder
  nome?: Prisma.SortOrder
  capacidade?: Prisma.SortOrder
  localizacao?: Prisma.SortOrder
  tipo?: Prisma.SortOrder
  precisaReserva?: Prisma.SortOrder
}

export type AmbienteSumOrderByAggregateInput = {
  capacidade?: Prisma.SortOrder
}

export type AmbienteCreateNestedOneWithoutChaveInput = {
  create?: Prisma.XOR<Prisma.AmbienteCreateWithoutChaveInput, Prisma.AmbienteUncheckedCreateWithoutChaveInput>
  connectOrCreate?: Prisma.AmbienteCreateOrConnectWithoutChaveInput
  connect?: Prisma.AmbienteWhereUniqueInput
}

export type AmbienteUpdateOneWithoutChaveNestedInput = {
  create?: Prisma.XOR<Prisma.AmbienteCreateWithoutChaveInput, Prisma.AmbienteUncheckedCreateWithoutChaveInput>
  connectOrCreate?: Prisma.AmbienteCreateOrConnectWithoutChaveInput
  upsert?: Prisma.AmbienteUpsertWithoutChaveInput
  disconnect?: Prisma.AmbienteWhereInput | boolean
  delete?: Prisma.AmbienteWhereInput | boolean
  connect?: Prisma.AmbienteWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.AmbienteUpdateToOneWithWhereWithoutChaveInput, Prisma.AmbienteUpdateWithoutChaveInput>, Prisma.AmbienteUncheckedUpdateWithoutChaveInput>
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type EnumLocalizacaoFieldUpdateOperationsInput = {
  set?: $Enums.Localizacao
}

export type EnumTipoAmbienteFieldUpdateOperationsInput = {
  set?: $Enums.TipoAmbiente
}

export type AmbienteCreateWithoutChaveInput = {
  id: string
  codigo: string
  nome: string
  capacidade: number
  localizacao: $Enums.Localizacao
  tipo: $Enums.TipoAmbiente
  precisaReserva?: boolean
}

export type AmbienteUncheckedCreateWithoutChaveInput = {
  id: string
  codigo: string
  nome: string
  capacidade: number
  localizacao: $Enums.Localizacao
  tipo: $Enums.TipoAmbiente
  precisaReserva?: boolean
}

export type AmbienteCreateOrConnectWithoutChaveInput = {
  where: Prisma.AmbienteWhereUniqueInput
  create: Prisma.XOR<Prisma.AmbienteCreateWithoutChaveInput, Prisma.AmbienteUncheckedCreateWithoutChaveInput>
}

export type AmbienteUpsertWithoutChaveInput = {
  update: Prisma.XOR<Prisma.AmbienteUpdateWithoutChaveInput, Prisma.AmbienteUncheckedUpdateWithoutChaveInput>
  create: Prisma.XOR<Prisma.AmbienteCreateWithoutChaveInput, Prisma.AmbienteUncheckedCreateWithoutChaveInput>
  where?: Prisma.AmbienteWhereInput
}

export type AmbienteUpdateToOneWithWhereWithoutChaveInput = {
  where?: Prisma.AmbienteWhereInput
  data: Prisma.XOR<Prisma.AmbienteUpdateWithoutChaveInput, Prisma.AmbienteUncheckedUpdateWithoutChaveInput>
}

export type AmbienteUpdateWithoutChaveInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  capacidade?: Prisma.IntFieldUpdateOperationsInput | number
  localizacao?: Prisma.EnumLocalizacaoFieldUpdateOperationsInput | $Enums.Localizacao
  tipo?: Prisma.EnumTipoAmbienteFieldUpdateOperationsInput | $Enums.TipoAmbiente
  precisaReserva?: Prisma.BoolFieldUpdateOperationsInput | boolean
}

export type AmbienteUncheckedUpdateWithoutChaveInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  nome?: Prisma.StringFieldUpdateOperationsInput | string
  capacidade?: Prisma.IntFieldUpdateOperationsInput | number
  localizacao?: Prisma.EnumLocalizacaoFieldUpdateOperationsInput | $Enums.Localizacao
  tipo?: Prisma.EnumTipoAmbienteFieldUpdateOperationsInput | $Enums.TipoAmbiente
  precisaReserva?: Prisma.BoolFieldUpdateOperationsInput | boolean
}



export type AmbienteSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  codigo?: boolean
  nome?: boolean
  capacidade?: boolean
  localizacao?: boolean
  tipo?: boolean
  precisaReserva?: boolean
  Chave?: boolean | Prisma.Ambiente$ChaveArgs<ExtArgs>
}, ExtArgs["result"]["ambiente"]>

export type AmbienteSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  codigo?: boolean
  nome?: boolean
  capacidade?: boolean
  localizacao?: boolean
  tipo?: boolean
  precisaReserva?: boolean
}, ExtArgs["result"]["ambiente"]>

export type AmbienteSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  codigo?: boolean
  nome?: boolean
  capacidade?: boolean
  localizacao?: boolean
  tipo?: boolean
  precisaReserva?: boolean
}, ExtArgs["result"]["ambiente"]>

export type AmbienteSelectScalar = {
  id?: boolean
  codigo?: boolean
  nome?: boolean
  capacidade?: boolean
  localizacao?: boolean
  tipo?: boolean
  precisaReserva?: boolean
}

export type AmbienteOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "codigo" | "nome" | "capacidade" | "localizacao" | "tipo" | "precisaReserva", ExtArgs["result"]["ambiente"]>
export type AmbienteInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Chave?: boolean | Prisma.Ambiente$ChaveArgs<ExtArgs>
}
export type AmbienteIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type AmbienteIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $AmbientePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Ambiente"
  objects: {
    Chave: Prisma.$ChavePayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    codigo: string
    nome: string
    capacidade: number
    localizacao: $Enums.Localizacao
    tipo: $Enums.TipoAmbiente
    precisaReserva: boolean
  }, ExtArgs["result"]["ambiente"]>
  composites: {}
}

export type AmbienteGetPayload<S extends boolean | null | undefined | AmbienteDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$AmbientePayload, S>

export type AmbienteCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<AmbienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: AmbienteCountAggregateInputType | true
  }

export interface AmbienteDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ambiente'], meta: { name: 'Ambiente' } }
  /**
   * Find zero or one Ambiente that matches the filter.
   * @param {AmbienteFindUniqueArgs} args - Arguments to find a Ambiente
   * @example
   * // Get one Ambiente
   * const ambiente = await prisma.ambiente.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AmbienteFindUniqueArgs>(args: Prisma.SelectSubset<T, AmbienteFindUniqueArgs<ExtArgs>>): Prisma.Prisma__AmbienteClient<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Ambiente that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AmbienteFindUniqueOrThrowArgs} args - Arguments to find a Ambiente
   * @example
   * // Get one Ambiente
   * const ambiente = await prisma.ambiente.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AmbienteFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, AmbienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__AmbienteClient<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Ambiente that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AmbienteFindFirstArgs} args - Arguments to find a Ambiente
   * @example
   * // Get one Ambiente
   * const ambiente = await prisma.ambiente.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AmbienteFindFirstArgs>(args?: Prisma.SelectSubset<T, AmbienteFindFirstArgs<ExtArgs>>): Prisma.Prisma__AmbienteClient<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Ambiente that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AmbienteFindFirstOrThrowArgs} args - Arguments to find a Ambiente
   * @example
   * // Get one Ambiente
   * const ambiente = await prisma.ambiente.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AmbienteFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, AmbienteFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__AmbienteClient<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Ambientes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AmbienteFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Ambientes
   * const ambientes = await prisma.ambiente.findMany()
   * 
   * // Get first 10 Ambientes
   * const ambientes = await prisma.ambiente.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const ambienteWithIdOnly = await prisma.ambiente.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends AmbienteFindManyArgs>(args?: Prisma.SelectSubset<T, AmbienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Ambiente.
   * @param {AmbienteCreateArgs} args - Arguments to create a Ambiente.
   * @example
   * // Create one Ambiente
   * const Ambiente = await prisma.ambiente.create({
   *   data: {
   *     // ... data to create a Ambiente
   *   }
   * })
   * 
   */
  create<T extends AmbienteCreateArgs>(args: Prisma.SelectSubset<T, AmbienteCreateArgs<ExtArgs>>): Prisma.Prisma__AmbienteClient<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Ambientes.
   * @param {AmbienteCreateManyArgs} args - Arguments to create many Ambientes.
   * @example
   * // Create many Ambientes
   * const ambiente = await prisma.ambiente.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends AmbienteCreateManyArgs>(args?: Prisma.SelectSubset<T, AmbienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Ambientes and returns the data saved in the database.
   * @param {AmbienteCreateManyAndReturnArgs} args - Arguments to create many Ambientes.
   * @example
   * // Create many Ambientes
   * const ambiente = await prisma.ambiente.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Ambientes and only return the `id`
   * const ambienteWithIdOnly = await prisma.ambiente.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends AmbienteCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, AmbienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Ambiente.
   * @param {AmbienteDeleteArgs} args - Arguments to delete one Ambiente.
   * @example
   * // Delete one Ambiente
   * const Ambiente = await prisma.ambiente.delete({
   *   where: {
   *     // ... filter to delete one Ambiente
   *   }
   * })
   * 
   */
  delete<T extends AmbienteDeleteArgs>(args: Prisma.SelectSubset<T, AmbienteDeleteArgs<ExtArgs>>): Prisma.Prisma__AmbienteClient<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Ambiente.
   * @param {AmbienteUpdateArgs} args - Arguments to update one Ambiente.
   * @example
   * // Update one Ambiente
   * const ambiente = await prisma.ambiente.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends AmbienteUpdateArgs>(args: Prisma.SelectSubset<T, AmbienteUpdateArgs<ExtArgs>>): Prisma.Prisma__AmbienteClient<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Ambientes.
   * @param {AmbienteDeleteManyArgs} args - Arguments to filter Ambientes to delete.
   * @example
   * // Delete a few Ambientes
   * const { count } = await prisma.ambiente.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends AmbienteDeleteManyArgs>(args?: Prisma.SelectSubset<T, AmbienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Ambientes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AmbienteUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Ambientes
   * const ambiente = await prisma.ambiente.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends AmbienteUpdateManyArgs>(args: Prisma.SelectSubset<T, AmbienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Ambientes and returns the data updated in the database.
   * @param {AmbienteUpdateManyAndReturnArgs} args - Arguments to update many Ambientes.
   * @example
   * // Update many Ambientes
   * const ambiente = await prisma.ambiente.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Ambientes and only return the `id`
   * const ambienteWithIdOnly = await prisma.ambiente.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends AmbienteUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, AmbienteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Ambiente.
   * @param {AmbienteUpsertArgs} args - Arguments to update or create a Ambiente.
   * @example
   * // Update or create a Ambiente
   * const ambiente = await prisma.ambiente.upsert({
   *   create: {
   *     // ... data to create a Ambiente
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Ambiente we want to update
   *   }
   * })
   */
  upsert<T extends AmbienteUpsertArgs>(args: Prisma.SelectSubset<T, AmbienteUpsertArgs<ExtArgs>>): Prisma.Prisma__AmbienteClient<runtime.Types.Result.GetResult<Prisma.$AmbientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Ambientes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AmbienteCountArgs} args - Arguments to filter Ambientes to count.
   * @example
   * // Count the number of Ambientes
   * const count = await prisma.ambiente.count({
   *   where: {
   *     // ... the filter for the Ambientes we want to count
   *   }
   * })
  **/
  count<T extends AmbienteCountArgs>(
    args?: Prisma.Subset<T, AmbienteCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AmbienteCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Ambiente.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AmbienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AmbienteAggregateArgs>(args: Prisma.Subset<T, AmbienteAggregateArgs>): Prisma.PrismaPromise<GetAmbienteAggregateType<T>>

  /**
   * Group by Ambiente.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AmbienteGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends AmbienteGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AmbienteGroupByArgs['orderBy'] }
      : { orderBy?: AmbienteGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, AmbienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAmbienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Ambiente model
 */
readonly fields: AmbienteFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Ambiente.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AmbienteClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Chave<T extends Prisma.Ambiente$ChaveArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Ambiente$ChaveArgs<ExtArgs>>): Prisma.Prisma__ChaveClient<runtime.Types.Result.GetResult<Prisma.$ChavePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Ambiente model
 */
export interface AmbienteFieldRefs {
  readonly id: Prisma.FieldRef<"Ambiente", 'String'>
  readonly codigo: Prisma.FieldRef<"Ambiente", 'String'>
  readonly nome: Prisma.FieldRef<"Ambiente", 'String'>
  readonly capacidade: Prisma.FieldRef<"Ambiente", 'Int'>
  readonly localizacao: Prisma.FieldRef<"Ambiente", 'Localizacao'>
  readonly tipo: Prisma.FieldRef<"Ambiente", 'TipoAmbiente'>
  readonly precisaReserva: Prisma.FieldRef<"Ambiente", 'Boolean'>
}
    

// Custom InputTypes
/**
 * Ambiente findUnique
 */
export type AmbienteFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AmbienteInclude<ExtArgs> | null
  /**
   * Filter, which Ambiente to fetch.
   */
  where: Prisma.AmbienteWhereUniqueInput
}

/**
 * Ambiente findUniqueOrThrow
 */
export type AmbienteFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AmbienteInclude<ExtArgs> | null
  /**
   * Filter, which Ambiente to fetch.
   */
  where: Prisma.AmbienteWhereUniqueInput
}

/**
 * Ambiente findFirst
 */
export type AmbienteFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AmbienteInclude<ExtArgs> | null
  /**
   * Filter, which Ambiente to fetch.
   */
  where?: Prisma.AmbienteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Ambientes to fetch.
   */
  orderBy?: Prisma.AmbienteOrderByWithRelationInput | Prisma.AmbienteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Ambientes.
   */
  cursor?: Prisma.AmbienteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Ambientes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Ambientes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Ambientes.
   */
  distinct?: Prisma.AmbienteScalarFieldEnum | Prisma.AmbienteScalarFieldEnum[]
}

/**
 * Ambiente findFirstOrThrow
 */
export type AmbienteFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AmbienteInclude<ExtArgs> | null
  /**
   * Filter, which Ambiente to fetch.
   */
  where?: Prisma.AmbienteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Ambientes to fetch.
   */
  orderBy?: Prisma.AmbienteOrderByWithRelationInput | Prisma.AmbienteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Ambientes.
   */
  cursor?: Prisma.AmbienteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Ambientes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Ambientes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Ambientes.
   */
  distinct?: Prisma.AmbienteScalarFieldEnum | Prisma.AmbienteScalarFieldEnum[]
}

/**
 * Ambiente findMany
 */
export type AmbienteFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AmbienteInclude<ExtArgs> | null
  /**
   * Filter, which Ambientes to fetch.
   */
  where?: Prisma.AmbienteWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Ambientes to fetch.
   */
  orderBy?: Prisma.AmbienteOrderByWithRelationInput | Prisma.AmbienteOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Ambientes.
   */
  cursor?: Prisma.AmbienteWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Ambientes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Ambientes.
   */
  skip?: number
  distinct?: Prisma.AmbienteScalarFieldEnum | Prisma.AmbienteScalarFieldEnum[]
}

/**
 * Ambiente create
 */
export type AmbienteCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AmbienteInclude<ExtArgs> | null
  /**
   * The data needed to create a Ambiente.
   */
  data: Prisma.XOR<Prisma.AmbienteCreateInput, Prisma.AmbienteUncheckedCreateInput>
}

/**
 * Ambiente createMany
 */
export type AmbienteCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Ambientes.
   */
  data: Prisma.AmbienteCreateManyInput | Prisma.AmbienteCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Ambiente createManyAndReturn
 */
export type AmbienteCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * The data used to create many Ambientes.
   */
  data: Prisma.AmbienteCreateManyInput | Prisma.AmbienteCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Ambiente update
 */
export type AmbienteUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AmbienteInclude<ExtArgs> | null
  /**
   * The data needed to update a Ambiente.
   */
  data: Prisma.XOR<Prisma.AmbienteUpdateInput, Prisma.AmbienteUncheckedUpdateInput>
  /**
   * Choose, which Ambiente to update.
   */
  where: Prisma.AmbienteWhereUniqueInput
}

/**
 * Ambiente updateMany
 */
export type AmbienteUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Ambientes.
   */
  data: Prisma.XOR<Prisma.AmbienteUpdateManyMutationInput, Prisma.AmbienteUncheckedUpdateManyInput>
  /**
   * Filter which Ambientes to update
   */
  where?: Prisma.AmbienteWhereInput
  /**
   * Limit how many Ambientes to update.
   */
  limit?: number
}

/**
 * Ambiente updateManyAndReturn
 */
export type AmbienteUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * The data used to update Ambientes.
   */
  data: Prisma.XOR<Prisma.AmbienteUpdateManyMutationInput, Prisma.AmbienteUncheckedUpdateManyInput>
  /**
   * Filter which Ambientes to update
   */
  where?: Prisma.AmbienteWhereInput
  /**
   * Limit how many Ambientes to update.
   */
  limit?: number
}

/**
 * Ambiente upsert
 */
export type AmbienteUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AmbienteInclude<ExtArgs> | null
  /**
   * The filter to search for the Ambiente to update in case it exists.
   */
  where: Prisma.AmbienteWhereUniqueInput
  /**
   * In case the Ambiente found by the `where` argument doesn't exist, create a new Ambiente with this data.
   */
  create: Prisma.XOR<Prisma.AmbienteCreateInput, Prisma.AmbienteUncheckedCreateInput>
  /**
   * In case the Ambiente was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AmbienteUpdateInput, Prisma.AmbienteUncheckedUpdateInput>
}

/**
 * Ambiente delete
 */
export type AmbienteDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AmbienteInclude<ExtArgs> | null
  /**
   * Filter which Ambiente to delete.
   */
  where: Prisma.AmbienteWhereUniqueInput
}

/**
 * Ambiente deleteMany
 */
export type AmbienteDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Ambientes to delete
   */
  where?: Prisma.AmbienteWhereInput
  /**
   * Limit how many Ambientes to delete.
   */
  limit?: number
}

/**
 * Ambiente.Chave
 */
export type Ambiente$ChaveArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Chave
   */
  select?: Prisma.ChaveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Chave
   */
  omit?: Prisma.ChaveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChaveInclude<ExtArgs> | null
  where?: Prisma.ChaveWhereInput
}

/**
 * Ambiente without action
 */
export type AmbienteDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ambiente
   */
  select?: Prisma.AmbienteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ambiente
   */
  omit?: Prisma.AmbienteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AmbienteInclude<ExtArgs> | null
}
